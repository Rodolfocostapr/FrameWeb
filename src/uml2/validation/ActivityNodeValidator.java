/**
 *
 * $Id$
 */
package uml2.validation;

import org.eclipse.emf.common.util.EList;

import uml2.Activity;
import uml2.ActivityEdge;
import uml2.ActivityGroup;
import uml2.ActivityNode;
import uml2.ActivityPartition;
import uml2.InterruptibleActivityRegion;
import uml2.StructuredActivityNode;

/**
 * A sample validator interface for {@link uml2.ActivityNode}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface ActivityNodeValidator {
	boolean validate();

	boolean validateActivity(Activity value);
	boolean validateInGroup(EList<ActivityGroup> value);
	boolean validateInPartition(EList<ActivityPartition> value);
	boolean validateInStructuredNode(StructuredActivityNode value);
	boolean validateInInterruptibleRegion(EList<InterruptibleActivityRegion> value);
	boolean validateOutgoing(EList<ActivityEdge> value);
	boolean validateIncoming(EList<ActivityEdge> value);
	boolean validateRedefinedNode(EList<ActivityNode> value);
}
